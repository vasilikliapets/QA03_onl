# 6. –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ø–∏—Å–æ–∫ –∏–∑ —á–∏—Å–µ–ª, —Å—Ç—Ä–æ–∫ –∏ —Ç–∞–ø–ª–æ–≤
# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–∫–æ–ª—å–∫–æ –≤ —Å–ø–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# print(my_function([1, 2, ‚Äúa‚Äù, (1, 2), ‚Äúb‚Äù])
# ü°™ {‚Äúint‚Äù: 2, ‚Äústr‚Äù: 2, ‚Äútuple‚Äù: 1}

def my_function(examp):
    """
    The function checks the data type
    """
    count_int = 0
    count_str = 0
    count_tuple = 0
    for i in examp:
        if type(i) == int:      #–ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            count_int += 1
        elif type(i) == str:    #–ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞ —Å—Ç—Ä–æ–∫–∏
            count_str += 1
        elif type(i) == tuple:  #–ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞ —Ç–∞–ø–ª—ã
            count_tuple += 1

    return ({'int': count_int, 'str': count_str, 'tuple': count_tuple})


print(my_function([1, 2, "a", (1, 2), "b"]))